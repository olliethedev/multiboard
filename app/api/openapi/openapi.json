{
  "openapi": "3.1.0",
  "info": {
    "title": "ZenStack Generated API",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "board",
      "description": "Board operations"
    },
    {
      "name": "column",
      "description": "Column operations"
    },
    {
      "name": "task",
      "description": "Task operations"
    }
  ],
  "components": {
    "schemas": {
      "Priority": {
        "type": "string",
        "enum": [
          "LOW",
          "MEDIUM",
          "HIGH",
          "URGENT"
        ]
      },
      "BoardScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "name",
          "createdAt",
          "organizationId",
          "ownerId"
        ]
      },
      "ColumnScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "title",
          "order",
          "boardId"
        ]
      },
      "TaskScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "title",
          "description",
          "priority",
          "createdAt",
          "updatedAt",
          "order",
          "columnId",
          "assigneeId",
          "completedAt",
          "isArchived"
        ]
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ]
      },
      "QueryMode": {
        "type": "string",
        "enum": [
          "default",
          "insensitive"
        ]
      },
      "NullsOrder": {
        "type": "string",
        "enum": [
          "first",
          "last"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "image": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Session"
            }
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Member"
            }
          },
          "invitations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invitation"
            }
          },
          "assignedTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "ownedBoards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Board"
            }
          },
          "userBoards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Board"
            }
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "emailVerified",
          "createdAt",
          "updatedAt"
        ]
      },
      "Session": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "token": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "ipAddress": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "userAgent": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "activeOrganizationId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "id",
          "expiresAt",
          "token",
          "createdAt",
          "updatedAt",
          "userId",
          "user"
        ]
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "accessToken": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "refreshToken": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "idToken": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "accessTokenExpiresAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "refreshTokenExpiresAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "accountId",
          "providerId",
          "userId",
          "user",
          "createdAt",
          "updatedAt"
        ]
      },
      "Organization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Member"
            }
          },
          "invitations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invitation"
            }
          },
          "boards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Board"
            }
          }
        },
        "required": [
          "id",
          "name",
          "createdAt"
        ]
      },
      "Member": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "userId": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "role": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "organizationId",
          "organization",
          "userId",
          "user",
          "role",
          "createdAt"
        ]
      },
      "Invitation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "inviterId": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "id",
          "organizationId",
          "organization",
          "email",
          "status",
          "expiresAt",
          "inviterId",
          "user"
        ]
      },
      "Board": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "organization": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Organization"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "ownerId": {
            "type": "string"
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Column"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "owner",
          "ownerId"
        ]
      },
      "Column": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "order": {
            "type": "integer"
          },
          "board": {
            "$ref": "#/components/schemas/Board"
          },
          "boardId": {
            "type": "string"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          }
        },
        "required": [
          "id",
          "title",
          "order",
          "board",
          "boardId"
        ]
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "order": {
            "type": "integer"
          },
          "column": {
            "$ref": "#/components/schemas/Column"
          },
          "columnId": {
            "type": "string"
          },
          "assignee": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "assigneeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "isArchived": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "title",
          "priority",
          "createdAt",
          "updatedAt",
          "order",
          "column",
          "columnId",
          "isArchived"
        ]
      },
      "UserWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountListRelationFilter"
          },
          "members": {
            "$ref": "#/components/schemas/MemberListRelationFilter"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationListRelationFilter"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskListRelationFilter"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardListRelationFilter"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardListRelationFilter"
          }
        }
      },
      "UserOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "name": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "email": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "image": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountOrderByRelationAggregateInput"
          },
          "members": {
            "$ref": "#/components/schemas/MemberOrderByRelationAggregateInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationOrderByRelationAggregateInput"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskOrderByRelationAggregateInput"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardOrderByRelationAggregateInput"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardOrderByRelationAggregateInput"
          }
        }
      },
      "UserWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereInput"
                }
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountListRelationFilter"
          },
          "members": {
            "$ref": "#/components/schemas/MemberListRelationFilter"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationListRelationFilter"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskListRelationFilter"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardListRelationFilter"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardListRelationFilter"
          }
        }
      },
      "SessionWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expiresAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ipAddress": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "userAgent": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "activeOrganizationId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "SessionWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereInput"
                }
              }
            ]
          },
          "expiresAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ipAddress": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "userAgent": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "activeOrganizationId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "AccountWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "accountId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "providerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "accessToken": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "refreshToken": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "idToken": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "accessTokenExpiresAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "refreshTokenExpiresAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "AccountWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereInput"
                }
              }
            ]
          },
          "accountId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "providerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "accessToken": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "refreshToken": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "idToken": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "accessTokenExpiresAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "refreshTokenExpiresAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "OrganizationWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrganizationWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrganizationWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "metadata": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "members": {
            "$ref": "#/components/schemas/MemberListRelationFilter"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationListRelationFilter"
          },
          "boards": {
            "$ref": "#/components/schemas/BoardListRelationFilter"
          }
        }
      },
      "OrganizationOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "name": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "slug": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "metadata": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "members": {
            "$ref": "#/components/schemas/MemberOrderByRelationAggregateInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationOrderByRelationAggregateInput"
          },
          "boards": {
            "$ref": "#/components/schemas/BoardOrderByRelationAggregateInput"
          }
        }
      },
      "OrganizationWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrganizationWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrganizationWhereInput"
                }
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "metadata": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "members": {
            "$ref": "#/components/schemas/MemberListRelationFilter"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationListRelationFilter"
          },
          "boards": {
            "$ref": "#/components/schemas/BoardListRelationFilter"
          }
        }
      },
      "MemberWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "organization": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/OrganizationWhereInput"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "MemberWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereInput"
                }
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "organization": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/OrganizationWhereInput"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "InvitationWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvitationWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expiresAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "organization": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/OrganizationWhereInput"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "InvitationWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvitationWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereInput"
                }
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expiresAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "organization": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/OrganizationWhereInput"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "BoardWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoardWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "organization": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationNullableScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/OrganizationWhereInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "owner": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "columns": {
            "$ref": "#/components/schemas/ColumnListRelationFilter"
          },
          "users": {
            "$ref": "#/components/schemas/UserListRelationFilter"
          }
        }
      },
      "BoardOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "name": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "organizationId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "ownerId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationOrderByWithRelationInput"
          },
          "owner": {
            "$ref": "#/components/schemas/UserOrderByWithRelationInput"
          },
          "columns": {
            "$ref": "#/components/schemas/ColumnOrderByRelationAggregateInput"
          },
          "users": {
            "$ref": "#/components/schemas/UserOrderByRelationAggregateInput"
          }
        }
      },
      "BoardWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoardWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereInput"
                }
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "organization": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationNullableScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/OrganizationWhereInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "owner": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "columns": {
            "$ref": "#/components/schemas/ColumnListRelationFilter"
          },
          "users": {
            "$ref": "#/components/schemas/UserListRelationFilter"
          }
        }
      },
      "BoardScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoardScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ColumnWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColumnWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "boardId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "board": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/BoardWhereInput"
              }
            ]
          },
          "tasks": {
            "$ref": "#/components/schemas/TaskListRelationFilter"
          }
        }
      },
      "ColumnOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "title": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "order": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "boardId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "board": {
            "$ref": "#/components/schemas/BoardOrderByWithRelationInput"
          },
          "tasks": {
            "$ref": "#/components/schemas/TaskOrderByRelationAggregateInput"
          }
        }
      },
      "ColumnWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColumnWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnWhereInput"
                }
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "boardId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "board": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/BoardWhereInput"
              }
            ]
          },
          "tasks": {
            "$ref": "#/components/schemas/TaskListRelationFilter"
          }
        }
      },
      "ColumnScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColumnScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "boardId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "TaskWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "priority": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumPriorityFilter"
              },
              {
                "$ref": "#/components/schemas/Priority"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "columnId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "assigneeId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "isArchived": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "column": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ColumnWhereInput"
              }
            ]
          },
          "assignee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "TaskOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "title": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "priority": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "order": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "columnId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "assigneeId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "isArchived": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "column": {
            "$ref": "#/components/schemas/ColumnOrderByWithRelationInput"
          },
          "assignee": {
            "$ref": "#/components/schemas/UserOrderByWithRelationInput"
          }
        }
      },
      "TaskWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereInput"
                }
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "priority": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumPriorityFilter"
              },
              {
                "$ref": "#/components/schemas/Priority"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "columnId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "assigneeId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "isArchived": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "column": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ColumnWhereInput"
              }
            ]
          },
          "assignee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableScalarRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "TaskScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "priority": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumPriorityWithAggregatesFilter"
              },
              {
                "$ref": "#/components/schemas/Priority"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "columnId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "assigneeId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "isArchived": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          }
        }
      },
      "UserUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "SessionUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "ipAddress": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "userAgent": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "activeOrganizationId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "AccountUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "accountId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "providerId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "accessToken": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "refreshToken": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "idToken": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "accessTokenExpiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "refreshTokenExpiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "MemberUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "InvitationUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "BoardCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationCreateNestedOneWithoutBoardsInput"
          },
          "owner": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutOwnedBoardsInput"
          },
          "columns": {
            "$ref": "#/components/schemas/ColumnCreateNestedManyWithoutBoardInput"
          },
          "users": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutUserBoardsInput"
          }
        },
        "required": [
          "name"
        ]
      },
      "BoardUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationUpdateOneWithoutBoardsNestedInput"
          },
          "owner": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutOwnedBoardsNestedInput"
          },
          "columns": {
            "$ref": "#/components/schemas/ColumnUpdateManyWithoutBoardNestedInput"
          },
          "users": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutUserBoardsNestedInput"
          }
        }
      },
      "BoardCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "organizationId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "BoardUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ColumnCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "order": {
            "type": "integer"
          },
          "board": {
            "$ref": "#/components/schemas/BoardCreateNestedOneWithoutColumnsInput"
          },
          "tasks": {
            "$ref": "#/components/schemas/TaskCreateNestedManyWithoutColumnInput"
          }
        },
        "required": [
          "title",
          "order",
          "board"
        ]
      },
      "ColumnUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "board": {
            "$ref": "#/components/schemas/BoardUpdateOneRequiredWithoutColumnsNestedInput"
          },
          "tasks": {
            "$ref": "#/components/schemas/TaskUpdateManyWithoutColumnNestedInput"
          }
        }
      },
      "ColumnCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "order": {
            "type": "integer"
          },
          "boardId": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "order",
          "boardId"
        ]
      },
      "ColumnUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "TaskCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "order": {
            "type": "integer"
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "isArchived": {
            "type": "boolean"
          },
          "column": {
            "$ref": "#/components/schemas/ColumnCreateNestedOneWithoutTasksInput"
          },
          "assignee": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutAssignedTasksInput"
          }
        },
        "required": [
          "title",
          "order",
          "column"
        ]
      },
      "TaskUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "priority": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Priority"
              },
              {
                "$ref": "#/components/schemas/EnumPriorityFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "isArchived": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "column": {
            "$ref": "#/components/schemas/ColumnUpdateOneRequiredWithoutTasksNestedInput"
          },
          "assignee": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutAssignedTasksNestedInput"
          }
        }
      },
      "TaskCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "order": {
            "type": "integer"
          },
          "columnId": {
            "type": "string"
          },
          "assigneeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "isArchived": {
            "type": "boolean"
          }
        },
        "required": [
          "title",
          "order",
          "columnId"
        ]
      },
      "TaskUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "priority": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Priority"
              },
              {
                "$ref": "#/components/schemas/EnumPriorityFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "isArchived": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "StringFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/QueryMode"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringFilter"
              }
            ]
          }
        }
      },
      "BoolFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "boolean"
          },
          "not": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/NestedBoolFilter"
              }
            ]
          }
        }
      },
      "StringNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/QueryMode"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableFilter"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "DateTimeFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeFilter"
              }
            ]
          }
        }
      },
      "SessionListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/SessionWhereInput"
          }
        }
      },
      "AccountListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/AccountWhereInput"
          }
        }
      },
      "MemberListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/MemberWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/MemberWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/MemberWhereInput"
          }
        }
      },
      "InvitationListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/InvitationWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/InvitationWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/InvitationWhereInput"
          }
        }
      },
      "TaskListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/TaskWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/TaskWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/TaskWhereInput"
          }
        }
      },
      "BoardListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/BoardWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/BoardWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/BoardWhereInput"
          }
        }
      },
      "SortOrderInput": {
        "type": "object",
        "properties": {
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "nulls": {
            "$ref": "#/components/schemas/NullsOrder"
          }
        },
        "required": [
          "sort"
        ]
      },
      "SessionOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "AccountOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "MemberOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "InvitationOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "TaskOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "BoardOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "StringWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/QueryMode"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringFilter"
          }
        }
      },
      "BoolWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "boolean"
          },
          "not": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/NestedBoolWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedBoolFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedBoolFilter"
          }
        }
      },
      "StringNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/QueryMode"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableWithAggregatesFilter"
              },
              {
                "type": "null"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          }
        }
      },
      "DateTimeWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedDateTimeFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedDateTimeFilter"
          }
        }
      },
      "UserScalarRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        }
      },
      "DateTimeNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "DateTimeNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "null"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
          }
        }
      },
      "OrganizationScalarRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/OrganizationWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/OrganizationWhereInput"
          }
        }
      },
      "OrganizationNullableScalarRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/OrganizationWhereInput"
              }
            ]
          },
          "isNot": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/OrganizationWhereInput"
              }
            ]
          }
        }
      },
      "ColumnListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/ColumnWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/ColumnWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/ColumnWhereInput"
          }
        }
      },
      "UserListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        }
      },
      "ColumnOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "UserOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "IntFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntFilter"
              }
            ]
          }
        }
      },
      "BoardScalarRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/BoardWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/BoardWhereInput"
          }
        }
      },
      "IntWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_avg": {
            "$ref": "#/components/schemas/NestedFloatFilter"
          },
          "_sum": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedIntFilter"
          }
        }
      },
      "EnumPriorityFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/Priority"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Priority"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Priority"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Priority"
              },
              {
                "$ref": "#/components/schemas/NestedEnumPriorityFilter"
              }
            ]
          }
        }
      },
      "ColumnScalarRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/ColumnWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/ColumnWhereInput"
          }
        }
      },
      "UserNullableScalarRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "isNot": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "EnumPriorityWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/Priority"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Priority"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Priority"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Priority"
              },
              {
                "$ref": "#/components/schemas/NestedEnumPriorityWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumPriorityFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumPriorityFilter"
          }
        }
      },
      "SessionCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/SessionCreateManyUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "AccountCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/AccountCreateManyUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "MemberCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/MemberUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/MemberCreateManyUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "InvitationCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/InvitationCreateManyUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "TaskCreateNestedManyWithoutAssigneeInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateWithoutAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateWithoutAssigneeInput"
                }
              },
              {
                "$ref": "#/components/schemas/TaskUncheckedCreateWithoutAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUncheckedCreateWithoutAssigneeInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateOrConnectWithoutAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateOrConnectWithoutAssigneeInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/TaskCreateManyAssigneeInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "BoardCreateNestedManyWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BoardCreateManyOwnerInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "BoardCreateNestedManyWithoutUsersInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutUsersInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateWithoutUsersInput"
                }
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutUsersInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUncheckedCreateWithoutUsersInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateOrConnectWithoutUsersInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateOrConnectWithoutUsersInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "SessionUncheckedCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/SessionCreateManyUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "AccountUncheckedCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/AccountCreateManyUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "MemberUncheckedCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/MemberUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/MemberCreateManyUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "InvitationUncheckedCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/InvitationCreateManyUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "TaskUncheckedCreateNestedManyWithoutAssigneeInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateWithoutAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateWithoutAssigneeInput"
                }
              },
              {
                "$ref": "#/components/schemas/TaskUncheckedCreateWithoutAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUncheckedCreateWithoutAssigneeInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateOrConnectWithoutAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateOrConnectWithoutAssigneeInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/TaskCreateManyAssigneeInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "BoardUncheckedCreateNestedManyWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BoardCreateManyOwnerInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "BoardUncheckedCreateNestedManyWithoutUsersInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutUsersInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateWithoutUsersInput"
                }
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutUsersInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUncheckedCreateWithoutUsersInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateOrConnectWithoutUsersInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateOrConnectWithoutUsersInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "StringFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "string"
          }
        }
      },
      "BoolFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean"
          }
        }
      },
      "NullableStringFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "DateTimeFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SessionUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/SessionCreateManyUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "AccountUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/AccountCreateManyUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "MemberUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/MemberUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/MemberCreateManyUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "InvitationUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/InvitationCreateManyUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "TaskUpdateManyWithoutAssigneeNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateWithoutAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateWithoutAssigneeInput"
                }
              },
              {
                "$ref": "#/components/schemas/TaskUncheckedCreateWithoutAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUncheckedCreateWithoutAssigneeInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateOrConnectWithoutAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateOrConnectWithoutAssigneeInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskUpsertWithWhereUniqueWithoutAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUpsertWithWhereUniqueWithoutAssigneeInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/TaskCreateManyAssigneeInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskUpdateWithWhereUniqueWithoutAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUpdateWithWhereUniqueWithoutAssigneeInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskUpdateManyWithWhereWithoutAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUpdateManyWithWhereWithoutAssigneeInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "BoardUpdateManyWithoutOwnerNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpsertWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUpsertWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BoardCreateManyOwnerInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUpdateWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateManyWithWhereWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUpdateManyWithWhereWithoutOwnerInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "BoardUpdateManyWithoutUsersNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutUsersInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateWithoutUsersInput"
                }
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutUsersInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUncheckedCreateWithoutUsersInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateOrConnectWithoutUsersInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateOrConnectWithoutUsersInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpsertWithWhereUniqueWithoutUsersInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUpsertWithWhereUniqueWithoutUsersInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateWithWhereUniqueWithoutUsersInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUpdateWithWhereUniqueWithoutUsersInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateManyWithWhereWithoutUsersInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUpdateManyWithWhereWithoutUsersInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "SessionUncheckedUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/SessionCreateManyUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "AccountUncheckedUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/AccountCreateManyUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "MemberUncheckedUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/MemberUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/MemberCreateManyUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "InvitationUncheckedUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/InvitationCreateManyUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "TaskUncheckedUpdateManyWithoutAssigneeNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateWithoutAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateWithoutAssigneeInput"
                }
              },
              {
                "$ref": "#/components/schemas/TaskUncheckedCreateWithoutAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUncheckedCreateWithoutAssigneeInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateOrConnectWithoutAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateOrConnectWithoutAssigneeInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskUpsertWithWhereUniqueWithoutAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUpsertWithWhereUniqueWithoutAssigneeInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/TaskCreateManyAssigneeInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskUpdateWithWhereUniqueWithoutAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUpdateWithWhereUniqueWithoutAssigneeInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskUpdateManyWithWhereWithoutAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUpdateManyWithWhereWithoutAssigneeInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "BoardUncheckedUpdateManyWithoutOwnerNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpsertWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUpsertWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BoardCreateManyOwnerInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUpdateWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateManyWithWhereWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUpdateManyWithWhereWithoutOwnerInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "BoardUncheckedUpdateManyWithoutUsersNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutUsersInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateWithoutUsersInput"
                }
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutUsersInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUncheckedCreateWithoutUsersInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateOrConnectWithoutUsersInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateOrConnectWithoutUsersInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpsertWithWhereUniqueWithoutUsersInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUpsertWithWhereUniqueWithoutUsersInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateWithWhereUniqueWithoutUsersInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUpdateWithWhereUniqueWithoutUsersInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateManyWithWhereWithoutUsersInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUpdateManyWithWhereWithoutUsersInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "NullableDateTimeFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "MemberCreateNestedManyWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberCreateWithoutOrganizationInput"
                }
              },
              {
                "$ref": "#/components/schemas/MemberUncheckedCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUncheckedCreateWithoutOrganizationInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateOrConnectWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberCreateOrConnectWithoutOrganizationInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/MemberCreateManyOrganizationInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "InvitationCreateNestedManyWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationCreateWithoutOrganizationInput"
                }
              },
              {
                "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutOrganizationInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateOrConnectWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationCreateOrConnectWithoutOrganizationInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/InvitationCreateManyOrganizationInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "BoardCreateNestedManyWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateWithoutOrganizationInput"
                }
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOrganizationInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateOrConnectWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateOrConnectWithoutOrganizationInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BoardCreateManyOrganizationInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "MemberUncheckedCreateNestedManyWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberCreateWithoutOrganizationInput"
                }
              },
              {
                "$ref": "#/components/schemas/MemberUncheckedCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUncheckedCreateWithoutOrganizationInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateOrConnectWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberCreateOrConnectWithoutOrganizationInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/MemberCreateManyOrganizationInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "InvitationUncheckedCreateNestedManyWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationCreateWithoutOrganizationInput"
                }
              },
              {
                "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutOrganizationInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateOrConnectWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationCreateOrConnectWithoutOrganizationInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/InvitationCreateManyOrganizationInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "BoardUncheckedCreateNestedManyWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateWithoutOrganizationInput"
                }
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOrganizationInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateOrConnectWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateOrConnectWithoutOrganizationInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BoardCreateManyOrganizationInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "MemberUpdateManyWithoutOrganizationNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberCreateWithoutOrganizationInput"
                }
              },
              {
                "$ref": "#/components/schemas/MemberUncheckedCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUncheckedCreateWithoutOrganizationInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateOrConnectWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberCreateOrConnectWithoutOrganizationInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberUpsertWithWhereUniqueWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUpsertWithWhereUniqueWithoutOrganizationInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/MemberCreateManyOrganizationInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberUpdateWithWhereUniqueWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUpdateWithWhereUniqueWithoutOrganizationInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberUpdateManyWithWhereWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUpdateManyWithWhereWithoutOrganizationInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "InvitationUpdateManyWithoutOrganizationNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationCreateWithoutOrganizationInput"
                }
              },
              {
                "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutOrganizationInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateOrConnectWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationCreateOrConnectWithoutOrganizationInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationUpsertWithWhereUniqueWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUpsertWithWhereUniqueWithoutOrganizationInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/InvitationCreateManyOrganizationInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationUpdateWithWhereUniqueWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUpdateWithWhereUniqueWithoutOrganizationInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationUpdateManyWithWhereWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUpdateManyWithWhereWithoutOrganizationInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "BoardUpdateManyWithoutOrganizationNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateWithoutOrganizationInput"
                }
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOrganizationInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateOrConnectWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateOrConnectWithoutOrganizationInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpsertWithWhereUniqueWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUpsertWithWhereUniqueWithoutOrganizationInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BoardCreateManyOrganizationInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateWithWhereUniqueWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUpdateWithWhereUniqueWithoutOrganizationInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateManyWithWhereWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUpdateManyWithWhereWithoutOrganizationInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "MemberUncheckedUpdateManyWithoutOrganizationNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberCreateWithoutOrganizationInput"
                }
              },
              {
                "$ref": "#/components/schemas/MemberUncheckedCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUncheckedCreateWithoutOrganizationInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateOrConnectWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberCreateOrConnectWithoutOrganizationInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberUpsertWithWhereUniqueWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUpsertWithWhereUniqueWithoutOrganizationInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/MemberCreateManyOrganizationInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberUpdateWithWhereUniqueWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUpdateWithWhereUniqueWithoutOrganizationInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberUpdateManyWithWhereWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberUpdateManyWithWhereWithoutOrganizationInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "InvitationUncheckedUpdateManyWithoutOrganizationNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationCreateWithoutOrganizationInput"
                }
              },
              {
                "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutOrganizationInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateOrConnectWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationCreateOrConnectWithoutOrganizationInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationUpsertWithWhereUniqueWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUpsertWithWhereUniqueWithoutOrganizationInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/InvitationCreateManyOrganizationInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationUpdateWithWhereUniqueWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUpdateWithWhereUniqueWithoutOrganizationInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationUpdateManyWithWhereWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationUpdateManyWithWhereWithoutOrganizationInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "BoardUncheckedUpdateManyWithoutOrganizationNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateWithoutOrganizationInput"
                }
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOrganizationInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateOrConnectWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateOrConnectWithoutOrganizationInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpsertWithWhereUniqueWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUpsertWithWhereUniqueWithoutOrganizationInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BoardCreateManyOrganizationInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateWithWhereUniqueWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUpdateWithWhereUniqueWithoutOrganizationInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateManyWithWhereWithoutOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardUpdateManyWithWhereWithoutOrganizationInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "OrganizationCreateNestedOneWithoutMembersInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationCreateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedCreateWithoutMembersInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/OrganizationCreateOrConnectWithoutMembersInput"
          },
          "connect": {
            "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
          }
        }
      },
      "UserCreateNestedOneWithoutMembersInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutMembersInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutMembersInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "OrganizationUpdateOneRequiredWithoutMembersNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationCreateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedCreateWithoutMembersInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/OrganizationCreateOrConnectWithoutMembersInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/OrganizationUpsertWithoutMembersInput"
          },
          "connect": {
            "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationUpdateToOneWithWhereWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUpdateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedUpdateWithoutMembersInput"
              }
            ]
          }
        }
      },
      "UserUpdateOneRequiredWithoutMembersNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutMembersInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutMembersInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutMembersInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutMembersInput"
              }
            ]
          }
        }
      },
      "OrganizationCreateNestedOneWithoutInvitationsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationCreateWithoutInvitationsInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedCreateWithoutInvitationsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/OrganizationCreateOrConnectWithoutInvitationsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
          }
        }
      },
      "UserCreateNestedOneWithoutInvitationsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutInvitationsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutInvitationsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutInvitationsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "OrganizationUpdateOneRequiredWithoutInvitationsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationCreateWithoutInvitationsInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedCreateWithoutInvitationsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/OrganizationCreateOrConnectWithoutInvitationsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/OrganizationUpsertWithoutInvitationsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationUpdateToOneWithWhereWithoutInvitationsInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUpdateWithoutInvitationsInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedUpdateWithoutInvitationsInput"
              }
            ]
          }
        }
      },
      "UserUpdateOneRequiredWithoutInvitationsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutInvitationsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutInvitationsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutInvitationsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutInvitationsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutInvitationsInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutInvitationsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutInvitationsInput"
              }
            ]
          }
        }
      },
      "OrganizationCreateNestedOneWithoutBoardsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationCreateWithoutBoardsInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedCreateWithoutBoardsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/OrganizationCreateOrConnectWithoutBoardsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
          }
        }
      },
      "UserCreateNestedOneWithoutOwnedBoardsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutOwnedBoardsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutOwnedBoardsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutOwnedBoardsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "ColumnCreateNestedManyWithoutBoardInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnCreateWithoutBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnCreateWithoutBoardInput"
                }
              },
              {
                "$ref": "#/components/schemas/ColumnUncheckedCreateWithoutBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnUncheckedCreateWithoutBoardInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnCreateOrConnectWithoutBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnCreateOrConnectWithoutBoardInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ColumnCreateManyBoardInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "UserCreateNestedManyWithoutUserBoardsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutUserBoardsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCreateWithoutUserBoardsInput"
                }
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutUserBoardsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUncheckedCreateWithoutUserBoardsInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateOrConnectWithoutUserBoardsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCreateOrConnectWithoutUserBoardsInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ColumnUncheckedCreateNestedManyWithoutBoardInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnCreateWithoutBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnCreateWithoutBoardInput"
                }
              },
              {
                "$ref": "#/components/schemas/ColumnUncheckedCreateWithoutBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnUncheckedCreateWithoutBoardInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnCreateOrConnectWithoutBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnCreateOrConnectWithoutBoardInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ColumnCreateManyBoardInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "UserUncheckedCreateNestedManyWithoutUserBoardsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutUserBoardsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCreateWithoutUserBoardsInput"
                }
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutUserBoardsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUncheckedCreateWithoutUserBoardsInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateOrConnectWithoutUserBoardsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCreateOrConnectWithoutUserBoardsInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "OrganizationUpdateOneWithoutBoardsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationCreateWithoutBoardsInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedCreateWithoutBoardsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/OrganizationCreateOrConnectWithoutBoardsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/OrganizationUpsertWithoutBoardsInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OrganizationWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OrganizationWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationUpdateToOneWithWhereWithoutBoardsInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUpdateWithoutBoardsInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedUpdateWithoutBoardsInput"
              }
            ]
          }
        }
      },
      "UserUpdateOneRequiredWithoutOwnedBoardsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutOwnedBoardsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutOwnedBoardsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutOwnedBoardsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutOwnedBoardsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutOwnedBoardsInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutOwnedBoardsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutOwnedBoardsInput"
              }
            ]
          }
        }
      },
      "ColumnUpdateManyWithoutBoardNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnCreateWithoutBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnCreateWithoutBoardInput"
                }
              },
              {
                "$ref": "#/components/schemas/ColumnUncheckedCreateWithoutBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnUncheckedCreateWithoutBoardInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnCreateOrConnectWithoutBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnCreateOrConnectWithoutBoardInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnUpsertWithWhereUniqueWithoutBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnUpsertWithWhereUniqueWithoutBoardInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ColumnCreateManyBoardInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnUpdateWithWhereUniqueWithoutBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnUpdateWithWhereUniqueWithoutBoardInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnUpdateManyWithWhereWithoutBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnUpdateManyWithWhereWithoutBoardInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "UserUpdateManyWithoutUserBoardsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutUserBoardsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCreateWithoutUserBoardsInput"
                }
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutUserBoardsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUncheckedCreateWithoutUserBoardsInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateOrConnectWithoutUserBoardsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCreateOrConnectWithoutUserBoardsInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpsertWithWhereUniqueWithoutUserBoardsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUpsertWithWhereUniqueWithoutUserBoardsInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithWhereUniqueWithoutUserBoardsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUpdateWithWhereUniqueWithoutUserBoardsInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateManyWithWhereWithoutUserBoardsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUpdateManyWithWhereWithoutUserBoardsInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ColumnUncheckedUpdateManyWithoutBoardNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnCreateWithoutBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnCreateWithoutBoardInput"
                }
              },
              {
                "$ref": "#/components/schemas/ColumnUncheckedCreateWithoutBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnUncheckedCreateWithoutBoardInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnCreateOrConnectWithoutBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnCreateOrConnectWithoutBoardInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnUpsertWithWhereUniqueWithoutBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnUpsertWithWhereUniqueWithoutBoardInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ColumnCreateManyBoardInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnUpdateWithWhereUniqueWithoutBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnUpdateWithWhereUniqueWithoutBoardInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnUpdateManyWithWhereWithoutBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnUpdateManyWithWhereWithoutBoardInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "UserUncheckedUpdateManyWithoutUserBoardsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutUserBoardsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCreateWithoutUserBoardsInput"
                }
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutUserBoardsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUncheckedCreateWithoutUserBoardsInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateOrConnectWithoutUserBoardsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCreateOrConnectWithoutUserBoardsInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpsertWithWhereUniqueWithoutUserBoardsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUpsertWithWhereUniqueWithoutUserBoardsInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithWhereUniqueWithoutUserBoardsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUpdateWithWhereUniqueWithoutUserBoardsInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateManyWithWhereWithoutUserBoardsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUpdateManyWithWhereWithoutUserBoardsInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "BoardCreateNestedOneWithoutColumnsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutColumnsInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutColumnsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/BoardCreateOrConnectWithoutColumnsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/BoardWhereUniqueInput"
          }
        }
      },
      "TaskCreateNestedManyWithoutColumnInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateWithoutColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateWithoutColumnInput"
                }
              },
              {
                "$ref": "#/components/schemas/TaskUncheckedCreateWithoutColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUncheckedCreateWithoutColumnInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateOrConnectWithoutColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateOrConnectWithoutColumnInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/TaskCreateManyColumnInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "TaskUncheckedCreateNestedManyWithoutColumnInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateWithoutColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateWithoutColumnInput"
                }
              },
              {
                "$ref": "#/components/schemas/TaskUncheckedCreateWithoutColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUncheckedCreateWithoutColumnInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateOrConnectWithoutColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateOrConnectWithoutColumnInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/TaskCreateManyColumnInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "IntFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "integer"
          },
          "increment": {
            "type": "integer"
          },
          "decrement": {
            "type": "integer"
          },
          "multiply": {
            "type": "integer"
          },
          "divide": {
            "type": "integer"
          }
        }
      },
      "BoardUpdateOneRequiredWithoutColumnsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutColumnsInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutColumnsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/BoardCreateOrConnectWithoutColumnsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/BoardUpsertWithoutColumnsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/BoardWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateToOneWithWhereWithoutColumnsInput"
              },
              {
                "$ref": "#/components/schemas/BoardUpdateWithoutColumnsInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedUpdateWithoutColumnsInput"
              }
            ]
          }
        }
      },
      "TaskUpdateManyWithoutColumnNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateWithoutColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateWithoutColumnInput"
                }
              },
              {
                "$ref": "#/components/schemas/TaskUncheckedCreateWithoutColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUncheckedCreateWithoutColumnInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateOrConnectWithoutColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateOrConnectWithoutColumnInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskUpsertWithWhereUniqueWithoutColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUpsertWithWhereUniqueWithoutColumnInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/TaskCreateManyColumnInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskUpdateWithWhereUniqueWithoutColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUpdateWithWhereUniqueWithoutColumnInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskUpdateManyWithWhereWithoutColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUpdateManyWithWhereWithoutColumnInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "TaskUncheckedUpdateManyWithoutColumnNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateWithoutColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateWithoutColumnInput"
                }
              },
              {
                "$ref": "#/components/schemas/TaskUncheckedCreateWithoutColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUncheckedCreateWithoutColumnInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateOrConnectWithoutColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateOrConnectWithoutColumnInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskUpsertWithWhereUniqueWithoutColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUpsertWithWhereUniqueWithoutColumnInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/TaskCreateManyColumnInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskUpdateWithWhereUniqueWithoutColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUpdateWithWhereUniqueWithoutColumnInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskUpdateManyWithWhereWithoutColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskUpdateManyWithWhereWithoutColumnInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ColumnCreateNestedOneWithoutTasksInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnCreateWithoutTasksInput"
              },
              {
                "$ref": "#/components/schemas/ColumnUncheckedCreateWithoutTasksInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ColumnCreateOrConnectWithoutTasksInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ColumnWhereUniqueInput"
          }
        }
      },
      "UserCreateNestedOneWithoutAssignedTasksInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutAssignedTasksInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutAssignedTasksInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutAssignedTasksInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "EnumPriorityFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "$ref": "#/components/schemas/Priority"
          }
        }
      },
      "ColumnUpdateOneRequiredWithoutTasksNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnCreateWithoutTasksInput"
              },
              {
                "$ref": "#/components/schemas/ColumnUncheckedCreateWithoutTasksInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ColumnCreateOrConnectWithoutTasksInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/ColumnUpsertWithoutTasksInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ColumnWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnUpdateToOneWithWhereWithoutTasksInput"
              },
              {
                "$ref": "#/components/schemas/ColumnUpdateWithoutTasksInput"
              },
              {
                "$ref": "#/components/schemas/ColumnUncheckedUpdateWithoutTasksInput"
              }
            ]
          }
        }
      },
      "UserUpdateOneWithoutAssignedTasksNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutAssignedTasksInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutAssignedTasksInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutAssignedTasksInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutAssignedTasksInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutAssignedTasksInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutAssignedTasksInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutAssignedTasksInput"
              }
            ]
          }
        }
      },
      "NestedStringFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringFilter"
              }
            ]
          }
        }
      },
      "NestedBoolFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "boolean"
          },
          "not": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/NestedBoolFilter"
              }
            ]
          }
        }
      },
      "NestedStringNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableFilter"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "NestedDateTimeFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeFilter"
              }
            ]
          }
        }
      },
      "NestedStringWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringFilter"
          }
        }
      },
      "NestedIntFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntFilter"
              }
            ]
          }
        }
      },
      "NestedBoolWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "boolean"
          },
          "not": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/NestedBoolWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedBoolFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedBoolFilter"
          }
        }
      },
      "NestedStringNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableWithAggregatesFilter"
              },
              {
                "type": "null"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          }
        }
      },
      "NestedIntNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            ]
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntNullableFilter"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "NestedDateTimeWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedDateTimeFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedDateTimeFilter"
          }
        }
      },
      "NestedDateTimeNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "NestedDateTimeNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "null"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
          }
        }
      },
      "NestedIntWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_avg": {
            "$ref": "#/components/schemas/NestedFloatFilter"
          },
          "_sum": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedIntFilter"
          }
        }
      },
      "NestedFloatFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "number"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "lt": {
            "type": "number"
          },
          "lte": {
            "type": "number"
          },
          "gt": {
            "type": "number"
          },
          "gte": {
            "type": "number"
          },
          "not": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/NestedFloatFilter"
              }
            ]
          }
        }
      },
      "NestedEnumPriorityFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/Priority"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Priority"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Priority"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Priority"
              },
              {
                "$ref": "#/components/schemas/NestedEnumPriorityFilter"
              }
            ]
          }
        }
      },
      "NestedEnumPriorityWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/Priority"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Priority"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Priority"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Priority"
              },
              {
                "$ref": "#/components/schemas/NestedEnumPriorityWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumPriorityFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumPriorityFilter"
          }
        }
      },
      "SessionCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "token": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "ipAddress": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "userAgent": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "activeOrganizationId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "id",
          "expiresAt",
          "token",
          "createdAt",
          "updatedAt"
        ]
      },
      "SessionUncheckedCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "token": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "ipAddress": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "userAgent": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "activeOrganizationId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "id",
          "expiresAt",
          "token",
          "createdAt",
          "updatedAt"
        ]
      },
      "SessionCreateOrConnectWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SessionWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "SessionCreateManyUserInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateManyUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionCreateManyUserInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "accessToken": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "refreshToken": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "idToken": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "accessTokenExpiresAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "refreshTokenExpiresAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "accountId",
          "providerId",
          "createdAt",
          "updatedAt"
        ]
      },
      "AccountUncheckedCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "accessToken": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "refreshToken": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "idToken": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "accessTokenExpiresAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "refreshTokenExpiresAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "accountId",
          "providerId",
          "createdAt",
          "updatedAt"
        ]
      },
      "AccountCreateOrConnectWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "AccountCreateManyUserInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateManyUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateManyUserInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "MemberCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationCreateNestedOneWithoutMembersInput"
          }
        },
        "required": [
          "id",
          "role",
          "createdAt",
          "organization"
        ]
      },
      "MemberUncheckedCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "organizationId",
          "role",
          "createdAt"
        ]
      },
      "MemberCreateOrConnectWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/MemberWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/MemberUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "MemberCreateManyUserInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateManyUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberCreateManyUserInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "InvitationCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationCreateNestedOneWithoutInvitationsInput"
          }
        },
        "required": [
          "id",
          "email",
          "status",
          "expiresAt",
          "organization"
        ]
      },
      "InvitationUncheckedCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "organizationId",
          "email",
          "status",
          "expiresAt"
        ]
      },
      "InvitationCreateOrConnectWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/InvitationWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "InvitationCreateManyUserInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateManyUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationCreateManyUserInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "TaskCreateWithoutAssigneeInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "order": {
            "type": "integer"
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "isArchived": {
            "type": "boolean"
          },
          "column": {
            "$ref": "#/components/schemas/ColumnCreateNestedOneWithoutTasksInput"
          }
        },
        "required": [
          "title",
          "order",
          "column"
        ]
      },
      "TaskUncheckedCreateWithoutAssigneeInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "order": {
            "type": "integer"
          },
          "columnId": {
            "type": "string"
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "isArchived": {
            "type": "boolean"
          }
        },
        "required": [
          "title",
          "order",
          "columnId"
        ]
      },
      "TaskCreateOrConnectWithoutAssigneeInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TaskWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateWithoutAssigneeInput"
              },
              {
                "$ref": "#/components/schemas/TaskUncheckedCreateWithoutAssigneeInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "TaskCreateManyAssigneeInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateManyAssigneeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateManyAssigneeInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "BoardCreateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationCreateNestedOneWithoutBoardsInput"
          },
          "columns": {
            "$ref": "#/components/schemas/ColumnCreateNestedManyWithoutBoardInput"
          },
          "users": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutUserBoardsInput"
          }
        },
        "required": [
          "name"
        ]
      },
      "BoardUncheckedCreateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "organizationId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "columns": {
            "$ref": "#/components/schemas/ColumnUncheckedCreateNestedManyWithoutBoardInput"
          },
          "users": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutUserBoardsInput"
          }
        },
        "required": [
          "name"
        ]
      },
      "BoardCreateOrConnectWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BoardWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "BoardCreateManyOwnerInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateManyOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateManyOwnerInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "BoardCreateWithoutUsersInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationCreateNestedOneWithoutBoardsInput"
          },
          "owner": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutOwnedBoardsInput"
          },
          "columns": {
            "$ref": "#/components/schemas/ColumnCreateNestedManyWithoutBoardInput"
          }
        },
        "required": [
          "name"
        ]
      },
      "BoardUncheckedCreateWithoutUsersInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "organizationId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "type": "string"
          },
          "columns": {
            "$ref": "#/components/schemas/ColumnUncheckedCreateNestedManyWithoutBoardInput"
          }
        },
        "required": [
          "name"
        ]
      },
      "BoardCreateOrConnectWithoutUsersInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BoardWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutUsersInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutUsersInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "SessionUpsertWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SessionWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/SessionUncheckedUpdateWithoutUserInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "SessionUpdateWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SessionWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/SessionUncheckedUpdateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "SessionUpdateManyWithWhereWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SessionScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "SessionScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expiresAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ipAddress": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "userAgent": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "activeOrganizationId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "AccountUpsertWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedUpdateWithoutUserInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "AccountUpdateWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedUpdateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "AccountUpdateManyWithWhereWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "AccountScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "accountId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "providerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "accessToken": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "refreshToken": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "idToken": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "accessTokenExpiresAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "refreshTokenExpiresAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "MemberUpsertWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/MemberWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/MemberUncheckedUpdateWithoutUserInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/MemberUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "MemberUpdateWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/MemberWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/MemberUncheckedUpdateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "MemberUpdateManyWithWhereWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/MemberScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/MemberUncheckedUpdateManyWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "MemberScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "InvitationUpsertWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/InvitationWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/InvitationUncheckedUpdateWithoutUserInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "InvitationUpdateWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/InvitationWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/InvitationUncheckedUpdateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "InvitationUpdateManyWithWhereWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/InvitationScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/InvitationUncheckedUpdateManyWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "InvitationScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvitationScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expiresAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "TaskUpsertWithWhereUniqueWithoutAssigneeInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TaskWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskUpdateWithoutAssigneeInput"
              },
              {
                "$ref": "#/components/schemas/TaskUncheckedUpdateWithoutAssigneeInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateWithoutAssigneeInput"
              },
              {
                "$ref": "#/components/schemas/TaskUncheckedCreateWithoutAssigneeInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "TaskUpdateWithWhereUniqueWithoutAssigneeInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TaskWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskUpdateWithoutAssigneeInput"
              },
              {
                "$ref": "#/components/schemas/TaskUncheckedUpdateWithoutAssigneeInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "TaskUpdateManyWithWhereWithoutAssigneeInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TaskScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/TaskUncheckedUpdateManyWithoutAssigneeInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "TaskScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "priority": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumPriorityFilter"
              },
              {
                "$ref": "#/components/schemas/Priority"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "columnId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "assigneeId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "isArchived": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          }
        }
      },
      "BoardUpsertWithWhereUniqueWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BoardWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedUpdateWithoutOwnerInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "BoardUpdateWithWhereUniqueWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BoardWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedUpdateWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "BoardUpdateManyWithWhereWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BoardScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedUpdateManyWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "BoardScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoardScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "BoardUpsertWithWhereUniqueWithoutUsersInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BoardWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateWithoutUsersInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedUpdateWithoutUsersInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutUsersInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutUsersInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "BoardUpdateWithWhereUniqueWithoutUsersInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BoardWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateWithoutUsersInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedUpdateWithoutUsersInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "BoardUpdateManyWithWhereWithoutUsersInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BoardScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedUpdateManyWithoutUsersInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "MemberCreateWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutMembersInput"
          }
        },
        "required": [
          "id",
          "role",
          "createdAt",
          "user"
        ]
      },
      "MemberUncheckedCreateWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "userId",
          "role",
          "createdAt"
        ]
      },
      "MemberCreateOrConnectWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/MemberWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateWithoutOrganizationInput"
              },
              {
                "$ref": "#/components/schemas/MemberUncheckedCreateWithoutOrganizationInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "MemberCreateManyOrganizationInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateManyOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberCreateManyOrganizationInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "InvitationCreateWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutInvitationsInput"
          }
        },
        "required": [
          "id",
          "email",
          "status",
          "expiresAt",
          "user"
        ]
      },
      "InvitationUncheckedCreateWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "inviterId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "status",
          "expiresAt",
          "inviterId"
        ]
      },
      "InvitationCreateOrConnectWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/InvitationWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateWithoutOrganizationInput"
              },
              {
                "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutOrganizationInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "InvitationCreateManyOrganizationInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateManyOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationCreateManyOrganizationInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "BoardCreateWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "owner": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutOwnedBoardsInput"
          },
          "columns": {
            "$ref": "#/components/schemas/ColumnCreateNestedManyWithoutBoardInput"
          },
          "users": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutUserBoardsInput"
          }
        },
        "required": [
          "name"
        ]
      },
      "BoardUncheckedCreateWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "ownerId": {
            "type": "string"
          },
          "columns": {
            "$ref": "#/components/schemas/ColumnUncheckedCreateNestedManyWithoutBoardInput"
          },
          "users": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutUserBoardsInput"
          }
        },
        "required": [
          "name"
        ]
      },
      "BoardCreateOrConnectWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BoardWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutOrganizationInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOrganizationInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "BoardCreateManyOrganizationInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateManyOrganizationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateManyOrganizationInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "MemberUpsertWithWhereUniqueWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/MemberWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberUpdateWithoutOrganizationInput"
              },
              {
                "$ref": "#/components/schemas/MemberUncheckedUpdateWithoutOrganizationInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberCreateWithoutOrganizationInput"
              },
              {
                "$ref": "#/components/schemas/MemberUncheckedCreateWithoutOrganizationInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "MemberUpdateWithWhereUniqueWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/MemberWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberUpdateWithoutOrganizationInput"
              },
              {
                "$ref": "#/components/schemas/MemberUncheckedUpdateWithoutOrganizationInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "MemberUpdateManyWithWhereWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/MemberScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/MemberUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/MemberUncheckedUpdateManyWithoutOrganizationInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "InvitationUpsertWithWhereUniqueWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/InvitationWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationUpdateWithoutOrganizationInput"
              },
              {
                "$ref": "#/components/schemas/InvitationUncheckedUpdateWithoutOrganizationInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationCreateWithoutOrganizationInput"
              },
              {
                "$ref": "#/components/schemas/InvitationUncheckedCreateWithoutOrganizationInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "InvitationUpdateWithWhereUniqueWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/InvitationWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationUpdateWithoutOrganizationInput"
              },
              {
                "$ref": "#/components/schemas/InvitationUncheckedUpdateWithoutOrganizationInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "InvitationUpdateManyWithWhereWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/InvitationScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvitationUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/InvitationUncheckedUpdateManyWithoutOrganizationInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "BoardUpsertWithWhereUniqueWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BoardWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateWithoutOrganizationInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedUpdateWithoutOrganizationInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutOrganizationInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutOrganizationInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "BoardUpdateWithWhereUniqueWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BoardWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateWithoutOrganizationInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedUpdateWithoutOrganizationInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "BoardUpdateManyWithWhereWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BoardScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedUpdateManyWithoutOrganizationInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "OrganizationCreateWithoutMembersInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationCreateNestedManyWithoutOrganizationInput"
          },
          "boards": {
            "$ref": "#/components/schemas/BoardCreateNestedManyWithoutOrganizationInput"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt"
        ]
      },
      "OrganizationUncheckedCreateWithoutMembersInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationUncheckedCreateNestedManyWithoutOrganizationInput"
          },
          "boards": {
            "$ref": "#/components/schemas/BoardUncheckedCreateNestedManyWithoutOrganizationInput"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt"
        ]
      },
      "OrganizationCreateOrConnectWithoutMembersInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationCreateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedCreateWithoutMembersInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserCreateWithoutMembersInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "image": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationCreateNestedManyWithoutUserInput"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskCreateNestedManyWithoutAssigneeInput"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardCreateNestedManyWithoutOwnerInput"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardCreateNestedManyWithoutUsersInput"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "emailVerified",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserUncheckedCreateWithoutMembersInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "image": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationUncheckedCreateNestedManyWithoutUserInput"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskUncheckedCreateNestedManyWithoutAssigneeInput"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardUncheckedCreateNestedManyWithoutOwnerInput"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardUncheckedCreateNestedManyWithoutUsersInput"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "emailVerified",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserCreateOrConnectWithoutMembersInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutMembersInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "OrganizationUpsertWithoutMembersInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationUpdateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedUpdateWithoutMembersInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationCreateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedCreateWithoutMembersInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/OrganizationWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "OrganizationUpdateToOneWithWhereWithoutMembersInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OrganizationWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationUpdateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedUpdateWithoutMembersInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "OrganizationUpdateWithoutMembersInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "metadata": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationUpdateManyWithoutOrganizationNestedInput"
          },
          "boards": {
            "$ref": "#/components/schemas/BoardUpdateManyWithoutOrganizationNestedInput"
          }
        }
      },
      "OrganizationUncheckedUpdateWithoutMembersInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "metadata": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationUncheckedUpdateManyWithoutOrganizationNestedInput"
          },
          "boards": {
            "$ref": "#/components/schemas/BoardUncheckedUpdateManyWithoutOrganizationNestedInput"
          }
        }
      },
      "UserUpsertWithoutMembersInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutMembersInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutMembersInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutMembersInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutMembersInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutMembersInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationUpdateManyWithoutUserNestedInput"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskUpdateManyWithoutAssigneeNestedInput"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardUpdateManyWithoutOwnerNestedInput"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardUpdateManyWithoutUsersNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutMembersInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationUncheckedUpdateManyWithoutUserNestedInput"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskUncheckedUpdateManyWithoutAssigneeNestedInput"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardUncheckedUpdateManyWithoutOwnerNestedInput"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardUncheckedUpdateManyWithoutUsersNestedInput"
          }
        }
      },
      "OrganizationCreateWithoutInvitationsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "members": {
            "$ref": "#/components/schemas/MemberCreateNestedManyWithoutOrganizationInput"
          },
          "boards": {
            "$ref": "#/components/schemas/BoardCreateNestedManyWithoutOrganizationInput"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt"
        ]
      },
      "OrganizationUncheckedCreateWithoutInvitationsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "members": {
            "$ref": "#/components/schemas/MemberUncheckedCreateNestedManyWithoutOrganizationInput"
          },
          "boards": {
            "$ref": "#/components/schemas/BoardUncheckedCreateNestedManyWithoutOrganizationInput"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt"
        ]
      },
      "OrganizationCreateOrConnectWithoutInvitationsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationCreateWithoutInvitationsInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedCreateWithoutInvitationsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserCreateWithoutInvitationsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "image": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "members": {
            "$ref": "#/components/schemas/MemberCreateNestedManyWithoutUserInput"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskCreateNestedManyWithoutAssigneeInput"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardCreateNestedManyWithoutOwnerInput"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardCreateNestedManyWithoutUsersInput"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "emailVerified",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserUncheckedCreateWithoutInvitationsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "image": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "members": {
            "$ref": "#/components/schemas/MemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskUncheckedCreateNestedManyWithoutAssigneeInput"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardUncheckedCreateNestedManyWithoutOwnerInput"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardUncheckedCreateNestedManyWithoutUsersInput"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "emailVerified",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserCreateOrConnectWithoutInvitationsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutInvitationsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutInvitationsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "OrganizationUpsertWithoutInvitationsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationUpdateWithoutInvitationsInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedUpdateWithoutInvitationsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationCreateWithoutInvitationsInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedCreateWithoutInvitationsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/OrganizationWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "OrganizationUpdateToOneWithWhereWithoutInvitationsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OrganizationWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationUpdateWithoutInvitationsInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedUpdateWithoutInvitationsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "OrganizationUpdateWithoutInvitationsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "metadata": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "members": {
            "$ref": "#/components/schemas/MemberUpdateManyWithoutOrganizationNestedInput"
          },
          "boards": {
            "$ref": "#/components/schemas/BoardUpdateManyWithoutOrganizationNestedInput"
          }
        }
      },
      "OrganizationUncheckedUpdateWithoutInvitationsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "metadata": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "members": {
            "$ref": "#/components/schemas/MemberUncheckedUpdateManyWithoutOrganizationNestedInput"
          },
          "boards": {
            "$ref": "#/components/schemas/BoardUncheckedUpdateManyWithoutOrganizationNestedInput"
          }
        }
      },
      "UserUpsertWithoutInvitationsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutInvitationsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutInvitationsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutInvitationsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutInvitationsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutInvitationsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutInvitationsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutInvitationsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutInvitationsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "members": {
            "$ref": "#/components/schemas/MemberUpdateManyWithoutUserNestedInput"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskUpdateManyWithoutAssigneeNestedInput"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardUpdateManyWithoutOwnerNestedInput"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardUpdateManyWithoutUsersNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutInvitationsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "members": {
            "$ref": "#/components/schemas/MemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskUncheckedUpdateManyWithoutAssigneeNestedInput"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardUncheckedUpdateManyWithoutOwnerNestedInput"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardUncheckedUpdateManyWithoutUsersNestedInput"
          }
        }
      },
      "OrganizationCreateWithoutBoardsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "members": {
            "$ref": "#/components/schemas/MemberCreateNestedManyWithoutOrganizationInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationCreateNestedManyWithoutOrganizationInput"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt"
        ]
      },
      "OrganizationUncheckedCreateWithoutBoardsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "members": {
            "$ref": "#/components/schemas/MemberUncheckedCreateNestedManyWithoutOrganizationInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationUncheckedCreateNestedManyWithoutOrganizationInput"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt"
        ]
      },
      "OrganizationCreateOrConnectWithoutBoardsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OrganizationWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationCreateWithoutBoardsInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedCreateWithoutBoardsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserCreateWithoutOwnedBoardsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "image": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "members": {
            "$ref": "#/components/schemas/MemberCreateNestedManyWithoutUserInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationCreateNestedManyWithoutUserInput"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskCreateNestedManyWithoutAssigneeInput"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardCreateNestedManyWithoutUsersInput"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "emailVerified",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserUncheckedCreateWithoutOwnedBoardsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "image": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "members": {
            "$ref": "#/components/schemas/MemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationUncheckedCreateNestedManyWithoutUserInput"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskUncheckedCreateNestedManyWithoutAssigneeInput"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardUncheckedCreateNestedManyWithoutUsersInput"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "emailVerified",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserCreateOrConnectWithoutOwnedBoardsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutOwnedBoardsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutOwnedBoardsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ColumnCreateWithoutBoardInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "order": {
            "type": "integer"
          },
          "tasks": {
            "$ref": "#/components/schemas/TaskCreateNestedManyWithoutColumnInput"
          }
        },
        "required": [
          "title",
          "order"
        ]
      },
      "ColumnUncheckedCreateWithoutBoardInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "order": {
            "type": "integer"
          },
          "tasks": {
            "$ref": "#/components/schemas/TaskUncheckedCreateNestedManyWithoutColumnInput"
          }
        },
        "required": [
          "title",
          "order"
        ]
      },
      "ColumnCreateOrConnectWithoutBoardInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ColumnWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnCreateWithoutBoardInput"
              },
              {
                "$ref": "#/components/schemas/ColumnUncheckedCreateWithoutBoardInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ColumnCreateManyBoardInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnCreateManyBoardInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnCreateManyBoardInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserCreateWithoutUserBoardsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "image": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "members": {
            "$ref": "#/components/schemas/MemberCreateNestedManyWithoutUserInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationCreateNestedManyWithoutUserInput"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskCreateNestedManyWithoutAssigneeInput"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardCreateNestedManyWithoutOwnerInput"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "emailVerified",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserUncheckedCreateWithoutUserBoardsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "image": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "members": {
            "$ref": "#/components/schemas/MemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationUncheckedCreateNestedManyWithoutUserInput"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskUncheckedCreateNestedManyWithoutAssigneeInput"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardUncheckedCreateNestedManyWithoutOwnerInput"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "emailVerified",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserCreateOrConnectWithoutUserBoardsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutUserBoardsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutUserBoardsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "OrganizationUpsertWithoutBoardsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationUpdateWithoutBoardsInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedUpdateWithoutBoardsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationCreateWithoutBoardsInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedCreateWithoutBoardsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/OrganizationWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "OrganizationUpdateToOneWithWhereWithoutBoardsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/OrganizationWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationUpdateWithoutBoardsInput"
              },
              {
                "$ref": "#/components/schemas/OrganizationUncheckedUpdateWithoutBoardsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "OrganizationUpdateWithoutBoardsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "metadata": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "members": {
            "$ref": "#/components/schemas/MemberUpdateManyWithoutOrganizationNestedInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationUpdateManyWithoutOrganizationNestedInput"
          }
        }
      },
      "OrganizationUncheckedUpdateWithoutBoardsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "metadata": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "members": {
            "$ref": "#/components/schemas/MemberUncheckedUpdateManyWithoutOrganizationNestedInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationUncheckedUpdateManyWithoutOrganizationNestedInput"
          }
        }
      },
      "UserUpsertWithoutOwnedBoardsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutOwnedBoardsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutOwnedBoardsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutOwnedBoardsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutOwnedBoardsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutOwnedBoardsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutOwnedBoardsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutOwnedBoardsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutOwnedBoardsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "members": {
            "$ref": "#/components/schemas/MemberUpdateManyWithoutUserNestedInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationUpdateManyWithoutUserNestedInput"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskUpdateManyWithoutAssigneeNestedInput"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardUpdateManyWithoutUsersNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutOwnedBoardsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "members": {
            "$ref": "#/components/schemas/MemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationUncheckedUpdateManyWithoutUserNestedInput"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskUncheckedUpdateManyWithoutAssigneeNestedInput"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardUncheckedUpdateManyWithoutUsersNestedInput"
          }
        }
      },
      "ColumnUpsertWithWhereUniqueWithoutBoardInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ColumnWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnUpdateWithoutBoardInput"
              },
              {
                "$ref": "#/components/schemas/ColumnUncheckedUpdateWithoutBoardInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnCreateWithoutBoardInput"
              },
              {
                "$ref": "#/components/schemas/ColumnUncheckedCreateWithoutBoardInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ColumnUpdateWithWhereUniqueWithoutBoardInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ColumnWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnUpdateWithoutBoardInput"
              },
              {
                "$ref": "#/components/schemas/ColumnUncheckedUpdateWithoutBoardInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ColumnUpdateManyWithWhereWithoutBoardInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ColumnScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ColumnUncheckedUpdateManyWithoutBoardInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ColumnScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColumnScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "boardId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "UserUpsertWithWhereUniqueWithoutUserBoardsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutUserBoardsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutUserBoardsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutUserBoardsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutUserBoardsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "UserUpdateWithWhereUniqueWithoutUserBoardsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutUserBoardsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutUserBoardsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "UserUpdateManyWithWhereWithoutUserBoardsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutUserBoardsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "UserScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "BoardCreateWithoutColumnsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationCreateNestedOneWithoutBoardsInput"
          },
          "owner": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutOwnedBoardsInput"
          },
          "users": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutUserBoardsInput"
          }
        },
        "required": [
          "name"
        ]
      },
      "BoardUncheckedCreateWithoutColumnsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "organizationId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "type": "string"
          },
          "users": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutUserBoardsInput"
          }
        },
        "required": [
          "name"
        ]
      },
      "BoardCreateOrConnectWithoutColumnsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BoardWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutColumnsInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutColumnsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "TaskCreateWithoutColumnInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "order": {
            "type": "integer"
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "isArchived": {
            "type": "boolean"
          },
          "assignee": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutAssignedTasksInput"
          }
        },
        "required": [
          "title",
          "order"
        ]
      },
      "TaskUncheckedCreateWithoutColumnInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "order": {
            "type": "integer"
          },
          "assigneeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "isArchived": {
            "type": "boolean"
          }
        },
        "required": [
          "title",
          "order"
        ]
      },
      "TaskCreateOrConnectWithoutColumnInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TaskWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateWithoutColumnInput"
              },
              {
                "$ref": "#/components/schemas/TaskUncheckedCreateWithoutColumnInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "TaskCreateManyColumnInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateManyColumnInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateManyColumnInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "BoardUpsertWithoutColumnsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateWithoutColumnsInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedUpdateWithoutColumnsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateWithoutColumnsInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedCreateWithoutColumnsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/BoardWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "BoardUpdateToOneWithWhereWithoutColumnsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BoardWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardUpdateWithoutColumnsInput"
              },
              {
                "$ref": "#/components/schemas/BoardUncheckedUpdateWithoutColumnsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BoardUpdateWithoutColumnsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationUpdateOneWithoutBoardsNestedInput"
          },
          "owner": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutOwnedBoardsNestedInput"
          },
          "users": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutUserBoardsNestedInput"
          }
        }
      },
      "BoardUncheckedUpdateWithoutColumnsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "users": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutUserBoardsNestedInput"
          }
        }
      },
      "TaskUpsertWithWhereUniqueWithoutColumnInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TaskWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskUpdateWithoutColumnInput"
              },
              {
                "$ref": "#/components/schemas/TaskUncheckedUpdateWithoutColumnInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateWithoutColumnInput"
              },
              {
                "$ref": "#/components/schemas/TaskUncheckedCreateWithoutColumnInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "TaskUpdateWithWhereUniqueWithoutColumnInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TaskWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskUpdateWithoutColumnInput"
              },
              {
                "$ref": "#/components/schemas/TaskUncheckedUpdateWithoutColumnInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "TaskUpdateManyWithWhereWithoutColumnInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TaskScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/TaskUncheckedUpdateManyWithoutColumnInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ColumnCreateWithoutTasksInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "order": {
            "type": "integer"
          },
          "board": {
            "$ref": "#/components/schemas/BoardCreateNestedOneWithoutColumnsInput"
          }
        },
        "required": [
          "title",
          "order",
          "board"
        ]
      },
      "ColumnUncheckedCreateWithoutTasksInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "order": {
            "type": "integer"
          },
          "boardId": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "order",
          "boardId"
        ]
      },
      "ColumnCreateOrConnectWithoutTasksInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ColumnWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnCreateWithoutTasksInput"
              },
              {
                "$ref": "#/components/schemas/ColumnUncheckedCreateWithoutTasksInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserCreateWithoutAssignedTasksInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "image": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "members": {
            "$ref": "#/components/schemas/MemberCreateNestedManyWithoutUserInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationCreateNestedManyWithoutUserInput"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardCreateNestedManyWithoutOwnerInput"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardCreateNestedManyWithoutUsersInput"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "emailVerified",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserUncheckedCreateWithoutAssignedTasksInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "image": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "members": {
            "$ref": "#/components/schemas/MemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationUncheckedCreateNestedManyWithoutUserInput"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardUncheckedCreateNestedManyWithoutOwnerInput"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardUncheckedCreateNestedManyWithoutUsersInput"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "emailVerified",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserCreateOrConnectWithoutAssignedTasksInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutAssignedTasksInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutAssignedTasksInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ColumnUpsertWithoutTasksInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnUpdateWithoutTasksInput"
              },
              {
                "$ref": "#/components/schemas/ColumnUncheckedUpdateWithoutTasksInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnCreateWithoutTasksInput"
              },
              {
                "$ref": "#/components/schemas/ColumnUncheckedCreateWithoutTasksInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/ColumnWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "ColumnUpdateToOneWithWhereWithoutTasksInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ColumnWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnUpdateWithoutTasksInput"
              },
              {
                "$ref": "#/components/schemas/ColumnUncheckedUpdateWithoutTasksInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ColumnUpdateWithoutTasksInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "board": {
            "$ref": "#/components/schemas/BoardUpdateOneRequiredWithoutColumnsNestedInput"
          }
        }
      },
      "ColumnUncheckedUpdateWithoutTasksInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "boardId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "UserUpsertWithoutAssignedTasksInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutAssignedTasksInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutAssignedTasksInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutAssignedTasksInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutAssignedTasksInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutAssignedTasksInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutAssignedTasksInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutAssignedTasksInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutAssignedTasksInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "members": {
            "$ref": "#/components/schemas/MemberUpdateManyWithoutUserNestedInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationUpdateManyWithoutUserNestedInput"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardUpdateManyWithoutOwnerNestedInput"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardUpdateManyWithoutUsersNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutAssignedTasksInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "members": {
            "$ref": "#/components/schemas/MemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationUncheckedUpdateManyWithoutUserNestedInput"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardUncheckedUpdateManyWithoutOwnerNestedInput"
          },
          "userBoards": {
            "$ref": "#/components/schemas/BoardUncheckedUpdateManyWithoutUsersNestedInput"
          }
        }
      },
      "SessionCreateManyUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "token": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "ipAddress": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "userAgent": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "activeOrganizationId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "id",
          "expiresAt",
          "token",
          "createdAt",
          "updatedAt"
        ]
      },
      "AccountCreateManyUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "accessToken": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "refreshToken": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "idToken": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "accessTokenExpiresAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "refreshTokenExpiresAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "accountId",
          "providerId",
          "createdAt",
          "updatedAt"
        ]
      },
      "MemberCreateManyUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "organizationId",
          "role",
          "createdAt"
        ]
      },
      "InvitationCreateManyUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "organizationId",
          "email",
          "status",
          "expiresAt"
        ]
      },
      "TaskCreateManyAssigneeInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "order": {
            "type": "integer"
          },
          "columnId": {
            "type": "string"
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "isArchived": {
            "type": "boolean"
          }
        },
        "required": [
          "title",
          "order",
          "columnId"
        ]
      },
      "BoardCreateManyOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "organizationId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "name"
        ]
      },
      "SessionUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "ipAddress": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "userAgent": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "activeOrganizationId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "SessionUncheckedUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "ipAddress": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "userAgent": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "activeOrganizationId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "SessionUncheckedUpdateManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "ipAddress": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "userAgent": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "activeOrganizationId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "AccountUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "accountId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "providerId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "accessToken": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "refreshToken": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "idToken": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "accessTokenExpiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "refreshTokenExpiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "AccountUncheckedUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "accountId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "providerId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "accessToken": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "refreshToken": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "idToken": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "accessTokenExpiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "refreshTokenExpiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "AccountUncheckedUpdateManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "accountId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "providerId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "accessToken": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "refreshToken": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "idToken": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "accessTokenExpiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "refreshTokenExpiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "MemberUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationUpdateOneRequiredWithoutMembersNestedInput"
          }
        }
      },
      "MemberUncheckedUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "MemberUncheckedUpdateManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "InvitationUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationUpdateOneRequiredWithoutInvitationsNestedInput"
          }
        }
      },
      "InvitationUncheckedUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "InvitationUncheckedUpdateManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "TaskUpdateWithoutAssigneeInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "priority": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Priority"
              },
              {
                "$ref": "#/components/schemas/EnumPriorityFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "isArchived": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "column": {
            "$ref": "#/components/schemas/ColumnUpdateOneRequiredWithoutTasksNestedInput"
          }
        }
      },
      "TaskUncheckedUpdateWithoutAssigneeInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "priority": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Priority"
              },
              {
                "$ref": "#/components/schemas/EnumPriorityFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "columnId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "isArchived": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "TaskUncheckedUpdateManyWithoutAssigneeInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "priority": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Priority"
              },
              {
                "$ref": "#/components/schemas/EnumPriorityFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "columnId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "isArchived": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "BoardUpdateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationUpdateOneWithoutBoardsNestedInput"
          },
          "columns": {
            "$ref": "#/components/schemas/ColumnUpdateManyWithoutBoardNestedInput"
          },
          "users": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutUserBoardsNestedInput"
          }
        }
      },
      "BoardUncheckedUpdateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "columns": {
            "$ref": "#/components/schemas/ColumnUncheckedUpdateManyWithoutBoardNestedInput"
          },
          "users": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutUserBoardsNestedInput"
          }
        }
      },
      "BoardUncheckedUpdateManyWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "BoardUpdateWithoutUsersInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationUpdateOneWithoutBoardsNestedInput"
          },
          "owner": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutOwnedBoardsNestedInput"
          },
          "columns": {
            "$ref": "#/components/schemas/ColumnUpdateManyWithoutBoardNestedInput"
          }
        }
      },
      "BoardUncheckedUpdateWithoutUsersInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "columns": {
            "$ref": "#/components/schemas/ColumnUncheckedUpdateManyWithoutBoardNestedInput"
          }
        }
      },
      "BoardUncheckedUpdateManyWithoutUsersInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "MemberCreateManyOrganizationInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "userId",
          "role",
          "createdAt"
        ]
      },
      "InvitationCreateManyOrganizationInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "inviterId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "status",
          "expiresAt",
          "inviterId"
        ]
      },
      "BoardCreateManyOrganizationInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "ownerId": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "MemberUpdateWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "user": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutMembersNestedInput"
          }
        }
      },
      "MemberUncheckedUpdateWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "MemberUncheckedUpdateManyWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "InvitationUpdateWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "user": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutInvitationsNestedInput"
          }
        }
      },
      "InvitationUncheckedUpdateWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "InvitationUncheckedUpdateManyWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expiresAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "BoardUpdateWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutOwnedBoardsNestedInput"
          },
          "columns": {
            "$ref": "#/components/schemas/ColumnUpdateManyWithoutBoardNestedInput"
          },
          "users": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutUserBoardsNestedInput"
          }
        }
      },
      "BoardUncheckedUpdateWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "columns": {
            "$ref": "#/components/schemas/ColumnUncheckedUpdateManyWithoutBoardNestedInput"
          },
          "users": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutUserBoardsNestedInput"
          }
        }
      },
      "BoardUncheckedUpdateManyWithoutOrganizationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ColumnCreateManyBoardInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "order": {
            "type": "integer"
          }
        },
        "required": [
          "title",
          "order"
        ]
      },
      "ColumnUpdateWithoutBoardInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "tasks": {
            "$ref": "#/components/schemas/TaskUpdateManyWithoutColumnNestedInput"
          }
        }
      },
      "ColumnUncheckedUpdateWithoutBoardInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "tasks": {
            "$ref": "#/components/schemas/TaskUncheckedUpdateManyWithoutColumnNestedInput"
          }
        }
      },
      "ColumnUncheckedUpdateManyWithoutBoardInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "UserUpdateWithoutUserBoardsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "members": {
            "$ref": "#/components/schemas/MemberUpdateManyWithoutUserNestedInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationUpdateManyWithoutUserNestedInput"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskUpdateManyWithoutAssigneeNestedInput"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardUpdateManyWithoutOwnerNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutUserBoardsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "members": {
            "$ref": "#/components/schemas/MemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitations": {
            "$ref": "#/components/schemas/InvitationUncheckedUpdateManyWithoutUserNestedInput"
          },
          "assignedTasks": {
            "$ref": "#/components/schemas/TaskUncheckedUpdateManyWithoutAssigneeNestedInput"
          },
          "ownedBoards": {
            "$ref": "#/components/schemas/BoardUncheckedUpdateManyWithoutOwnerNestedInput"
          }
        }
      },
      "UserUncheckedUpdateManyWithoutUserBoardsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "TaskCreateManyColumnInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "order": {
            "type": "integer"
          },
          "assigneeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "isArchived": {
            "type": "boolean"
          }
        },
        "required": [
          "title",
          "order"
        ]
      },
      "TaskUpdateWithoutColumnInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "priority": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Priority"
              },
              {
                "$ref": "#/components/schemas/EnumPriorityFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "isArchived": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "assignee": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutAssignedTasksNestedInput"
          }
        }
      },
      "TaskUncheckedUpdateWithoutColumnInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "priority": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Priority"
              },
              {
                "$ref": "#/components/schemas/EnumPriorityFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "assigneeId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "isArchived": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "TaskUncheckedUpdateManyWithoutColumnInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "priority": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Priority"
              },
              {
                "$ref": "#/components/schemas/EnumPriorityFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "assigneeId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "isArchived": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "UserDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/UserInclude"
          }
        }
      },
      "OrganizationDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OrganizationSelect"
          },
          "include": {
            "$ref": "#/components/schemas/OrganizationInclude"
          }
        }
      },
      "BoardDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BoardSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BoardInclude"
          }
        }
      },
      "ColumnDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ColumnSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ColumnInclude"
          }
        }
      },
      "UserInclude": {
        "type": "object",
        "properties": {
          "sessions": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SessionFindManyArgs"
              }
            ]
          },
          "accounts": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/AccountFindManyArgs"
              }
            ]
          },
          "members": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/MemberFindManyArgs"
              }
            ]
          },
          "invitations": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/InvitationFindManyArgs"
              }
            ]
          },
          "assignedTasks": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/TaskFindManyArgs"
              }
            ]
          },
          "ownedBoards": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoardFindManyArgs"
              }
            ]
          },
          "userBoards": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoardFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserCountOutputTypeDefaultArgs"
              }
            ]
          }
        }
      },
      "SessionInclude": {
        "type": "object",
        "properties": {
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserDefaultArgs"
              }
            ]
          }
        }
      },
      "AccountInclude": {
        "type": "object",
        "properties": {
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserDefaultArgs"
              }
            ]
          }
        }
      },
      "OrganizationInclude": {
        "type": "object",
        "properties": {
          "members": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/MemberFindManyArgs"
              }
            ]
          },
          "invitations": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/InvitationFindManyArgs"
              }
            ]
          },
          "boards": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoardFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OrganizationCountOutputTypeDefaultArgs"
              }
            ]
          }
        }
      },
      "MemberInclude": {
        "type": "object",
        "properties": {
          "organization": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OrganizationDefaultArgs"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserDefaultArgs"
              }
            ]
          }
        }
      },
      "InvitationInclude": {
        "type": "object",
        "properties": {
          "organization": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OrganizationDefaultArgs"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserDefaultArgs"
              }
            ]
          }
        }
      },
      "BoardInclude": {
        "type": "object",
        "properties": {
          "organization": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OrganizationDefaultArgs"
              }
            ]
          },
          "owner": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserDefaultArgs"
              }
            ]
          },
          "columns": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ColumnFindManyArgs"
              }
            ]
          },
          "users": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoardCountOutputTypeDefaultArgs"
              }
            ]
          }
        }
      },
      "ColumnInclude": {
        "type": "object",
        "properties": {
          "board": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoardDefaultArgs"
              }
            ]
          },
          "tasks": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/TaskFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ColumnCountOutputTypeDefaultArgs"
              }
            ]
          }
        }
      },
      "TaskInclude": {
        "type": "object",
        "properties": {
          "column": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ColumnDefaultArgs"
              }
            ]
          },
          "assignee": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserDefaultArgs"
              }
            ]
          }
        }
      },
      "UserCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "sessions": {
            "type": "boolean"
          },
          "accounts": {
            "type": "boolean"
          },
          "members": {
            "type": "boolean"
          },
          "invitations": {
            "type": "boolean"
          },
          "assignedTasks": {
            "type": "boolean"
          },
          "ownedBoards": {
            "type": "boolean"
          },
          "userBoards": {
            "type": "boolean"
          }
        }
      },
      "OrganizationCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "members": {
            "type": "boolean"
          },
          "invitations": {
            "type": "boolean"
          },
          "boards": {
            "type": "boolean"
          }
        }
      },
      "BoardCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "columns": {
            "type": "boolean"
          },
          "users": {
            "type": "boolean"
          }
        }
      },
      "ColumnCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "boolean"
          }
        }
      },
      "UserCountOutputTypeDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserCountOutputTypeSelect"
          }
        }
      },
      "OrganizationCountOutputTypeDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/OrganizationCountOutputTypeSelect"
          }
        }
      },
      "BoardCountOutputTypeDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BoardCountOutputTypeSelect"
          }
        }
      },
      "ColumnCountOutputTypeDefaultArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ColumnCountOutputTypeSelect"
          }
        }
      },
      "UserSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "image": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "sessions": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SessionFindManyArgs"
              }
            ]
          },
          "accounts": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/AccountFindManyArgs"
              }
            ]
          },
          "members": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/MemberFindManyArgs"
              }
            ]
          },
          "invitations": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/InvitationFindManyArgs"
              }
            ]
          },
          "assignedTasks": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/TaskFindManyArgs"
              }
            ]
          },
          "ownedBoards": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoardFindManyArgs"
              }
            ]
          },
          "userBoards": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoardFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserCountOutputTypeDefaultArgs"
              }
            ]
          }
        }
      },
      "SessionSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "expiresAt": {
            "type": "boolean"
          },
          "token": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "ipAddress": {
            "type": "boolean"
          },
          "userAgent": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          },
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserDefaultArgs"
              }
            ]
          },
          "activeOrganizationId": {
            "type": "boolean"
          }
        }
      },
      "AccountSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "accountId": {
            "type": "boolean"
          },
          "providerId": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          },
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserDefaultArgs"
              }
            ]
          },
          "accessToken": {
            "type": "boolean"
          },
          "refreshToken": {
            "type": "boolean"
          },
          "idToken": {
            "type": "boolean"
          },
          "accessTokenExpiresAt": {
            "type": "boolean"
          },
          "refreshTokenExpiresAt": {
            "type": "boolean"
          },
          "scope": {
            "type": "boolean"
          },
          "password": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          }
        }
      },
      "OrganizationSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "slug": {
            "type": "boolean"
          },
          "logo": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "metadata": {
            "type": "boolean"
          },
          "members": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/MemberFindManyArgs"
              }
            ]
          },
          "invitations": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/InvitationFindManyArgs"
              }
            ]
          },
          "boards": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoardFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OrganizationCountOutputTypeDefaultArgs"
              }
            ]
          }
        }
      },
      "MemberSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "organizationId": {
            "type": "boolean"
          },
          "organization": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OrganizationDefaultArgs"
              }
            ]
          },
          "userId": {
            "type": "boolean"
          },
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserDefaultArgs"
              }
            ]
          },
          "role": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          }
        }
      },
      "InvitationSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "organizationId": {
            "type": "boolean"
          },
          "organization": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OrganizationDefaultArgs"
              }
            ]
          },
          "email": {
            "type": "boolean"
          },
          "role": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "expiresAt": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "boolean"
          },
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserDefaultArgs"
              }
            ]
          }
        }
      },
      "BoardSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "organization": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OrganizationDefaultArgs"
              }
            ]
          },
          "organizationId": {
            "type": "boolean"
          },
          "owner": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserDefaultArgs"
              }
            ]
          },
          "ownerId": {
            "type": "boolean"
          },
          "columns": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ColumnFindManyArgs"
              }
            ]
          },
          "users": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoardCountOutputTypeDefaultArgs"
              }
            ]
          }
        }
      },
      "ColumnSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "order": {
            "type": "boolean"
          },
          "board": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoardDefaultArgs"
              }
            ]
          },
          "boardId": {
            "type": "boolean"
          },
          "tasks": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/TaskFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ColumnCountOutputTypeDefaultArgs"
              }
            ]
          }
        }
      },
      "TaskSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "priority": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "order": {
            "type": "boolean"
          },
          "column": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ColumnDefaultArgs"
              }
            ]
          },
          "columnId": {
            "type": "boolean"
          },
          "assignee": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserDefaultArgs"
              }
            ]
          },
          "assigneeId": {
            "type": "boolean"
          },
          "completedAt": {
            "type": "boolean"
          },
          "isArchived": {
            "type": "boolean"
          }
        }
      },
      "BoardCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "organizationId": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "BoardMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "organizationId": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          }
        }
      },
      "BoardMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "organizationId": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          }
        }
      },
      "ColumnCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "order": {
            "type": "boolean"
          },
          "boardId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "ColumnAvgAggregateInput": {
        "type": "object",
        "properties": {
          "order": {
            "type": "boolean"
          }
        }
      },
      "ColumnSumAggregateInput": {
        "type": "object",
        "properties": {
          "order": {
            "type": "boolean"
          }
        }
      },
      "ColumnMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "order": {
            "type": "boolean"
          },
          "boardId": {
            "type": "boolean"
          }
        }
      },
      "ColumnMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "order": {
            "type": "boolean"
          },
          "boardId": {
            "type": "boolean"
          }
        }
      },
      "TaskCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "priority": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "order": {
            "type": "boolean"
          },
          "columnId": {
            "type": "boolean"
          },
          "assigneeId": {
            "type": "boolean"
          },
          "completedAt": {
            "type": "boolean"
          },
          "isArchived": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "TaskAvgAggregateInput": {
        "type": "object",
        "properties": {
          "order": {
            "type": "boolean"
          }
        }
      },
      "TaskSumAggregateInput": {
        "type": "object",
        "properties": {
          "order": {
            "type": "boolean"
          }
        }
      },
      "TaskMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "priority": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "order": {
            "type": "boolean"
          },
          "columnId": {
            "type": "boolean"
          },
          "assigneeId": {
            "type": "boolean"
          },
          "completedAt": {
            "type": "boolean"
          },
          "isArchived": {
            "type": "boolean"
          }
        }
      },
      "TaskMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "priority": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "order": {
            "type": "boolean"
          },
          "columnId": {
            "type": "boolean"
          },
          "assigneeId": {
            "type": "boolean"
          },
          "completedAt": {
            "type": "boolean"
          },
          "isArchived": {
            "type": "boolean"
          }
        }
      },
      "AggregateBoard": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/BoardCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/BoardMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/BoardMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "BoardGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "organizationId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "type": "string"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/BoardCountAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/BoardMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/BoardMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "ownerId"
        ]
      },
      "AggregateColumn": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ColumnCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ColumnAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ColumnSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ColumnMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ColumnMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "ColumnGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "order": {
            "type": "integer"
          },
          "boardId": {
            "type": "string"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ColumnCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ColumnAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ColumnSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ColumnMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ColumnMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "title",
          "order",
          "boardId"
        ]
      },
      "AggregateTask": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TaskCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TaskAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TaskSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TaskMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TaskMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "TaskGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "order": {
            "type": "integer"
          },
          "columnId": {
            "type": "string"
          },
          "assigneeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "isArchived": {
            "type": "boolean"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TaskCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TaskAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TaskSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TaskMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TaskMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "title",
          "priority",
          "createdAt",
          "updatedAt",
          "order",
          "columnId",
          "isArchived"
        ]
      },
      "BoardCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "organizationId": {
            "type": "integer"
          },
          "ownerId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "organizationId",
          "ownerId",
          "_all"
        ]
      },
      "BoardMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "BoardMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "organizationId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ColumnCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "integer"
          },
          "order": {
            "type": "integer"
          },
          "boardId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "title",
          "order",
          "boardId",
          "_all"
        ]
      },
      "ColumnAvgAggregateOutputType": {
        "type": "object",
        "properties": {
          "order": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "ColumnSumAggregateOutputType": {
        "type": "object",
        "properties": {
          "order": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          }
        }
      },
      "ColumnMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "boardId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ColumnMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "boardId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "TaskCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "integer"
          },
          "description": {
            "type": "integer"
          },
          "priority": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "order": {
            "type": "integer"
          },
          "columnId": {
            "type": "integer"
          },
          "assigneeId": {
            "type": "integer"
          },
          "completedAt": {
            "type": "integer"
          },
          "isArchived": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "title",
          "description",
          "priority",
          "createdAt",
          "updatedAt",
          "order",
          "columnId",
          "assigneeId",
          "completedAt",
          "isArchived",
          "_all"
        ]
      },
      "TaskAvgAggregateOutputType": {
        "type": "object",
        "properties": {
          "order": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "TaskSumAggregateOutputType": {
        "type": "object",
        "properties": {
          "order": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          }
        }
      },
      "TaskMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "priority": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Priority"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "columnId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "assigneeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "isArchived": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          }
        }
      },
      "TaskMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "priority": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/Priority"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "order": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "columnId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "assigneeId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "isArchived": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          }
        }
      },
      "_Meta": {
        "type": "object",
        "description": "Meta information about the request or response",
        "properties": {
          "serialization": {
            "description": "Serialization metadata"
          }
        },
        "additionalProperties": true
      },
      "_Error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "message"
            ],
            "properties": {
              "prisma": {
                "type": "boolean",
                "description": "Indicates if the error occurred during a Prisma call"
              },
              "rejectedByPolicy": {
                "type": "boolean",
                "description": "Indicates if the error was due to rejection by a policy"
              },
              "code": {
                "type": "string",
                "description": "Prisma error code. Only available when \"prisma\" field is true."
              },
              "message": {
                "type": "string",
                "description": "Error message"
              },
              "reason": {
                "type": "string",
                "description": "Detailed error reason"
              },
              "zodErrors": {
                "type": "object",
                "additionalProperties": true,
                "description": "Zod validation errors if the error is due to data validation failure"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "BatchPayload": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          }
        }
      },
      "UserFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/UserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SessionFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SessionSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SessionInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SessionWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/AccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/AccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "MemberFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/MemberSelect"
          },
          "include": {
            "$ref": "#/components/schemas/MemberInclude"
          },
          "where": {
            "$ref": "#/components/schemas/MemberWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "InvitationFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/InvitationSelect"
          },
          "include": {
            "$ref": "#/components/schemas/InvitationInclude"
          },
          "where": {
            "$ref": "#/components/schemas/InvitationWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BoardCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BoardSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BoardInclude"
          },
          "data": {
            "$ref": "#/components/schemas/BoardCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BoardCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoardCreateManyInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardCreateManyInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BoardFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BoardSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BoardInclude"
          },
          "where": {
            "$ref": "#/components/schemas/BoardWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BoardFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BoardSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BoardInclude"
          },
          "where": {
            "$ref": "#/components/schemas/BoardWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BoardFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BoardSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BoardInclude"
          },
          "where": {
            "$ref": "#/components/schemas/BoardWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BoardUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BoardSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BoardInclude"
          },
          "where": {
            "$ref": "#/components/schemas/BoardWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/BoardUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BoardUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BoardWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/BoardUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BoardUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BoardSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BoardInclude"
          },
          "where": {
            "$ref": "#/components/schemas/BoardWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/BoardCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/BoardUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BoardDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BoardSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BoardInclude"
          },
          "where": {
            "$ref": "#/components/schemas/BoardWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BoardDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BoardWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BoardCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BoardSelect"
          },
          "where": {
            "$ref": "#/components/schemas/BoardWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BoardAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BoardWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/BoardOrderByWithRelationInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/BoardWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoardCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/BoardMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/BoardMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BoardGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BoardWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/BoardOrderByWithRelationInput"
          },
          "by": {
            "$ref": "#/components/schemas/BoardScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/BoardScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoardCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/BoardMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/BoardMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ColumnCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ColumnSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ColumnInclude"
          },
          "data": {
            "$ref": "#/components/schemas/ColumnCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ColumnCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ColumnCreateManyInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnCreateManyInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ColumnFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ColumnSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ColumnInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ColumnWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ColumnFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ColumnSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ColumnInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ColumnWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ColumnFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ColumnSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ColumnInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ColumnWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ColumnUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ColumnSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ColumnInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ColumnWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/ColumnUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ColumnUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ColumnWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/ColumnUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ColumnUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ColumnSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ColumnInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ColumnWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/ColumnCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/ColumnUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ColumnDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ColumnSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ColumnInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ColumnWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ColumnDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ColumnWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ColumnCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ColumnSelect"
          },
          "where": {
            "$ref": "#/components/schemas/ColumnWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ColumnAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ColumnWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ColumnOrderByWithRelationInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/ColumnWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ColumnCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ColumnMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ColumnMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/ColumnSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/ColumnAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ColumnGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ColumnWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ColumnOrderByWithRelationInput"
          },
          "by": {
            "$ref": "#/components/schemas/ColumnScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/ColumnScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ColumnCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ColumnMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ColumnMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/ColumnSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/ColumnAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TaskCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/TaskSelect"
          },
          "include": {
            "$ref": "#/components/schemas/TaskInclude"
          },
          "data": {
            "$ref": "#/components/schemas/TaskCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TaskCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskCreateManyInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateManyInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean",
            "description": "Do not insert records with unique fields or ID fields that already exist."
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TaskFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/TaskSelect"
          },
          "include": {
            "$ref": "#/components/schemas/TaskInclude"
          },
          "where": {
            "$ref": "#/components/schemas/TaskWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TaskFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/TaskSelect"
          },
          "include": {
            "$ref": "#/components/schemas/TaskInclude"
          },
          "where": {
            "$ref": "#/components/schemas/TaskWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TaskFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/TaskSelect"
          },
          "include": {
            "$ref": "#/components/schemas/TaskInclude"
          },
          "where": {
            "$ref": "#/components/schemas/TaskWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TaskUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/TaskSelect"
          },
          "include": {
            "$ref": "#/components/schemas/TaskInclude"
          },
          "where": {
            "$ref": "#/components/schemas/TaskWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/TaskUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TaskUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TaskWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/TaskUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TaskUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/TaskSelect"
          },
          "include": {
            "$ref": "#/components/schemas/TaskInclude"
          },
          "where": {
            "$ref": "#/components/schemas/TaskWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/TaskCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/TaskUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TaskDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/TaskSelect"
          },
          "include": {
            "$ref": "#/components/schemas/TaskInclude"
          },
          "where": {
            "$ref": "#/components/schemas/TaskWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TaskDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TaskWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TaskCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/TaskSelect"
          },
          "where": {
            "$ref": "#/components/schemas/TaskWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TaskAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TaskWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/TaskOrderByWithRelationInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/TaskWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/TaskCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/TaskMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/TaskMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/TaskSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/TaskAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TaskGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TaskWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/TaskOrderByWithRelationInput"
          },
          "by": {
            "$ref": "#/components/schemas/TaskScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/TaskScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/TaskCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/TaskMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/TaskMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/TaskSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/TaskAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "paths": {
    "/api/model/board/create": {
      "post": {
        "operationId": "createBoard",
        "description": "Create a new Board",
        "tags": [
          "board"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Board",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/model/board/createMany": {
      "post": {
        "operationId": "createManyBoard",
        "description": "Create several Board",
        "tags": [
          "board"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/model/board/findUnique": {
      "get": {
        "operationId": "findUniqueBoard",
        "description": "Find one unique Board",
        "tags": [
          "board"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Board",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/board/findFirst": {
      "get": {
        "operationId": "findFirstBoard",
        "description": "Find the first Board matching the given condition",
        "tags": [
          "board"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Board",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/board/findMany": {
      "get": {
        "operationId": "findManyBoard",
        "description": "Find a list of Board",
        "tags": [
          "board"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Board"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/board/update": {
      "patch": {
        "operationId": "updateBoard",
        "description": "Update a Board",
        "tags": [
          "board"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Board",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/model/board/updateMany": {
      "patch": {
        "operationId": "updateManyBoard",
        "description": "Update Boards matching the given condition",
        "tags": [
          "board"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/model/board/upsert": {
      "post": {
        "operationId": "upsertBoard",
        "description": "Upsert a Board",
        "tags": [
          "board"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Board",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/model/board/delete": {
      "delete": {
        "operationId": "deleteBoard",
        "description": "Delete one unique Board",
        "tags": [
          "board"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Board",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/board/deleteMany": {
      "delete": {
        "operationId": "deleteManyBoard",
        "description": "Delete Boards matching the given condition",
        "tags": [
          "board"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/board/count": {
      "get": {
        "operationId": "countBoard",
        "description": "Find a list of Board",
        "tags": [
          "board"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/BoardCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/board/aggregate": {
      "get": {
        "operationId": "aggregateBoard",
        "description": "Aggregate Boards",
        "tags": [
          "board"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateBoard",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/board/groupBy": {
      "get": {
        "operationId": "groupByBoard",
        "description": "Group Boards by fields",
        "tags": [
          "board"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BoardGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/column/create": {
      "post": {
        "operationId": "createColumn",
        "description": "Create a new Column",
        "tags": [
          "column"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Column",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/model/column/createMany": {
      "post": {
        "operationId": "createManyColumn",
        "description": "Create several Column",
        "tags": [
          "column"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/model/column/findUnique": {
      "get": {
        "operationId": "findUniqueColumn",
        "description": "Find one unique Column",
        "tags": [
          "column"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Column",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/column/findFirst": {
      "get": {
        "operationId": "findFirstColumn",
        "description": "Find the first Column matching the given condition",
        "tags": [
          "column"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Column",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/column/findMany": {
      "get": {
        "operationId": "findManyColumn",
        "description": "Find a list of Column",
        "tags": [
          "column"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Column"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/column/update": {
      "patch": {
        "operationId": "updateColumn",
        "description": "Update a Column",
        "tags": [
          "column"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Column",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/model/column/updateMany": {
      "patch": {
        "operationId": "updateManyColumn",
        "description": "Update Columns matching the given condition",
        "tags": [
          "column"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/model/column/upsert": {
      "post": {
        "operationId": "upsertColumn",
        "description": "Upsert a Column",
        "tags": [
          "column"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Column",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/model/column/delete": {
      "delete": {
        "operationId": "deleteColumn",
        "description": "Delete one unique Column",
        "tags": [
          "column"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Column",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/column/deleteMany": {
      "delete": {
        "operationId": "deleteManyColumn",
        "description": "Delete Columns matching the given condition",
        "tags": [
          "column"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/column/count": {
      "get": {
        "operationId": "countColumn",
        "description": "Find a list of Column",
        "tags": [
          "column"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/ColumnCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/column/aggregate": {
      "get": {
        "operationId": "aggregateColumn",
        "description": "Aggregate Columns",
        "tags": [
          "column"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateColumn",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/column/groupBy": {
      "get": {
        "operationId": "groupByColumn",
        "description": "Group Columns by fields",
        "tags": [
          "column"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ColumnGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/task/create": {
      "post": {
        "operationId": "createTask",
        "description": "Create a new Task",
        "tags": [
          "task"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Task",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/model/task/createMany": {
      "post": {
        "operationId": "createManyTask",
        "description": "Create several Task",
        "tags": [
          "task"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/model/task/findUnique": {
      "get": {
        "operationId": "findUniqueTask",
        "description": "Find one unique Task",
        "tags": [
          "task"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Task",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/task/findFirst": {
      "get": {
        "operationId": "findFirstTask",
        "description": "Find the first Task matching the given condition",
        "tags": [
          "task"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Task",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/task/findMany": {
      "get": {
        "operationId": "findManyTask",
        "description": "Find a list of Task",
        "tags": [
          "task"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Task"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/task/update": {
      "patch": {
        "operationId": "updateTask",
        "description": "Update a Task",
        "tags": [
          "task"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Task",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/model/task/updateMany": {
      "patch": {
        "operationId": "updateManyTask",
        "description": "Update Tasks matching the given condition",
        "tags": [
          "task"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/model/task/upsert": {
      "post": {
        "operationId": "upsertTask",
        "description": "Upsert a Task",
        "tags": [
          "task"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Task",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/model/task/delete": {
      "delete": {
        "operationId": "deleteTask",
        "description": "Delete one unique Task",
        "tags": [
          "task"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Task",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/task/deleteMany": {
      "delete": {
        "operationId": "deleteManyTask",
        "description": "Delete Tasks matching the given condition",
        "tags": [
          "task"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/task/count": {
      "get": {
        "operationId": "countTask",
        "description": "Find a list of Task",
        "tags": [
          "task"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/TaskCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/task/aggregate": {
      "get": {
        "operationId": "aggregateTask",
        "description": "Aggregate Tasks",
        "tags": [
          "task"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateTask",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/model/task/groupBy": {
      "get": {
        "operationId": "groupByTask",
        "description": "Group Tasks by fields",
        "tags": [
          "task"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TaskGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is unprocessable due to validation errors"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    }
  },
  "security": [
    {
      "basic": []
    }
  ]
}